/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p dbus_test_interface.h: dashboard/dbus_test.xml
 *
 * qdbusxml2cpp is Copyright (C) 2023 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DBUS_TEST_INTERFACE_H
#define DBUS_TEST_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface local.CanDataReceiver
 */
class LocalCanDataReceiverInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "local.CanDataReceiver"; }

public:
    LocalCanDataReceiverInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~LocalCanDataReceiverInterface();

    Q_PROPERTY(double rpm READ rpm)
    inline double rpm() const
    { return qvariant_cast< double >(property("rpm")); }

    Q_PROPERTY(double speed READ speed)
    inline double speed() const
    { return qvariant_cast< double >(property("speed")); }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void rpmChanged(double newRpm);
    void speedChanged(double newSpeed);
};

namespace local {
  typedef ::LocalCanDataReceiverInterface CanDataReceiver;
}
#endif
